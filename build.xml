<?xml version="1.0" encoding="utf-8" ?>
<project name="donkfish" default="build" basedir=".">
  <!-- Configure path to GWT SDK -->
  <property environment="env"/>
  <property name="gwt.extra.args" value=""/>
  <property name="gwt.sdk" value="gwt-2.2.0"/>
    
  <property name="src" value="src" />
  <property name="build" value="build" />
  <property name="war" value="war" />
  <property name="classes" value="${war}/WEB-INF/classes" />
  <property name="lib" value="lib" />
    
  <property name="src.dir" location="${src}" />
  <property name="build.dir" location="${build}" />
  <property name="webapp.dir" location="${war}" />
  <property name="classes.dir" location="${classes}" />
  <property name="lib.dir" location="${lib}" />
  <property name="war.file" location="${build}/webapp.war"/>
  <property name="src.file" location="${build}/webapp-src.zip"/>
  
  <!-- set default values for stax tasks -->
  <property name="stax.appid" value=""/>
  <property name="run.port" value="8080"/>
  <property name="run.environment" value=""/>
    
  <path id="project.class.path">
    <pathelement location="${war}/WEB-INF/classes"/>
    <pathelement location="${gwt.sdk}/gwt-user.jar"/>
    <fileset dir="${gwt.sdk}" includes="gwt-dev*.jar"/>
    <!-- Add any additional non-server libs (such as JUnit) -->
    <fileset dir="${webapp.dir}/WEB-INF/lib" includes="**/*.jar"/>
  </path>
    
  <macrodef name="gwtc">
    <attribute name="src" default="${src}"/>
    <attribute name="classpath-id" default="project.class.path"/>
    <attribute name="module"/>
    <attribute name="war" default="${webapp.dir}"/>
    <sequential>
      <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
        <classpath>
          <pathelement location="@{src}"/>
          <path refid="@{classpath-id}"/>
        </classpath>
        <!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
        <jvmarg value="-Xmx256M"/>
        <arg value="-war"/>
        <arg value="@{war}"/>
        <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
        <arg value="@{module}"/>
      </java>
    </sequential>
  </macrodef>
    
  <macrodef name="devmode">
    <attribute name="src" default="${src}"/>
    <attribute name="classpath-id" default="project.class.path"/>
    <attribute name="module"/>
    <sequential>
      <java fork="true" spawn="true" classname="com.google.gwt.dev.DevMode">
        <classpath>
          <pathelement location="@{src}"/>
          <path refid="@{classpath-id}"/>
        </classpath>
        <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8003" />
        <jvmarg value="-Xmx256M"/>
        <arg value="-noserver"/>
        <arg value="-port"/>
        <arg value="${run.port}"/>
        <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
        <arg value="@{module}"/>
      </java>
    </sequential>
  </macrodef>
  <target name="libs" description="Copy libs to WEB-INF/lib">
    <mkdir dir="war/WEB-INF/lib" />
    <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
    <!-- Add any additional server libs that need to be copied -->
  </target>

  <target name="javac" depends="libs" description="Compile java source">
    <mkdir dir="${webapp.dir}/WEB-INF/classes"/>
    <javac srcdir="${src.dir}" includes="**" encoding="utf-8"
        destdir="${webapp.dir}/WEB-INF/classes"
        source="1.5" target="1.5" nowarn="true"
        debug="true" debuglevel="lines,vars,source">
      <classpath refid="project.class.path"/>
    </javac>
    <copy todir="${webapp.dir}/WEB-INF/classes">
      <fileset dir="src" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="gwtc" description="GWT compile to JavaScript">
    <gwtc src="${src.dir}" classpath-id="project.class.path" module="com.donkfish.tools.module"/>
  </target>

  <target name="devmode" depends="javac" description="Run development mode">
    <devmode src="${src.dir}" classpath-id="project.class.path" module="com.donkfish.tools.module" />
  </target>

  <target name="hosted" depends="devmode" description="Run development mode (NOTE: the 'hosted' target is deprecated)" />

  <target name="build" depends="gwtc,javac" description="Build this project" />
  <target name="compile" depends="gwtc,javac" description="Build this project" />

  <target name="war" depends="build" description="Create a war file">
    <zip destfile="${war.file}" basedir="${war}"/>
  </target>

  <target name="clean" description="Cleans this project">
    <delete dir="${classes}" failonerror="false" />
    <delete dir="${webapp.dir}/t" failonerror="false" />
    <delete dir="${webapp.dir}/WEB-INF/deploy" failonerror="false" />
  </target>
  
 
  <target name="dist" depends="compile" description="generate the distribution">
    <mkdir dir="${build}"/>
    <war destfile="${war.file}" webxml="${webapp.dir}/WEB-INF/web.xml">
      <fileset dir="${webapp.dir}">
      </fileset>
    </war>
    
    <zip destfile="${src.file}">
      <zipfileset dir="${basedir}">
        <exclude name="${build}/**"/>
        <exclude name="${classes}/**"/>
        <exclude name="${war}/t/**"/>
      </zipfileset>
    </zip>
  </target>
    
  <target name="deploy" depends="dist,stax-classpath" description="deploy the distribution to Stax">
    <input message="Please enter Stax username:" addproperty="stax.username"/>
    <input message="Please enter Stax password:" addproperty="stax.password"/>
    <taskdef name="deploy" classname="com.staxnet.ant.DeployTask">
      <classpath refid="staxtasks.class.path"/>
    </taskdef>
    <deploy deployfile="${war.file}" appid="${stax.appid}" username="${stax.username}" password="${stax.password}"/>
  </target>
    
  <target name="run" depends="javac,stax-classpath" description="run the application in stax">
    <taskdef name="run" classname="com.staxnet.ant.RunWarTask">
      <classpath refid="staxtasks.class.path"/>
    </taskdef>
    <run workingdir="${build}/staxcat" webappdir="${webapp.dir}" port="${run.port}" environment="${run.environment}"/>
  </target>
    
  <target name="stax-classpath">
    <property environment="env"/>
      <property name="stax.home" value="${env.BEES_HOME}"/>
      <echo message="stax home: ${stax.home}"/>
      
      <path id="staxtasks.class.path">
          <fileset dir="${stax.home}/lib" includes="*.jar"/>
      </path>
  </target>
</project>
